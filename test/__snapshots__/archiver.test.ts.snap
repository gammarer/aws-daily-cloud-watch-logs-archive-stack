// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DailyCloudWatchLogsArchiver Testing Should match snapshot: archiver 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "DailyCloudWatchLogsArchiverLambdaExecutionRoleB287F490": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": "logs:CreateExportTask",
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "log-export-policy",
          },
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "s3:GetBucketAcl",
                    "s3:PutObject",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::GetAtt": Array [
                      "DailyCloudWatchLogsArchiverLogArchiveBucket88461686",
                      "Arn",
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "put-bucket-policy",
          },
        ],
        "RoleName": "daily-cw-log-archiver-lambda-exec-a5ac343a-role",
      },
      "Type": "AWS::IAM::Role",
    },
    "DailyCloudWatchLogsArchiverLogArchiveBucket88461686": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AccessControl": "Private",
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "aws:kms",
              },
            },
          ],
        },
        "BucketName": "log-archive-a5ac343a",
        "LifecycleConfiguration": Object {
          "Rules": Array [
            Object {
              "Id": "archive-step-lifecycle-rule",
              "Status": "Enabled",
              "Transitions": Array [
                Object {
                  "StorageClass": "STANDARD_IA",
                  "TransitionInDays": 60,
                },
                Object {
                  "StorageClass": "INTELLIGENT_TIERING",
                  "TransitionInDays": 120,
                },
                Object {
                  "StorageClass": "GLACIER",
                  "TransitionInDays": 180,
                },
                Object {
                  "StorageClass": "DEEP_ARCHIVE",
                  "TransitionInDays": 360,
                },
              ],
            },
          ],
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "VersioningConfiguration": Object {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "DailyCloudWatchLogsArchiverLogArchiveBucketPolicy098686E8": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "DailyCloudWatchLogsArchiverLogArchiveBucket88461686",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DailyCloudWatchLogsArchiverLogArchiveBucket88461686",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DailyCloudWatchLogsArchiverLogArchiveBucket88461686",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "s3:GetBucketAcl",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "logs.us-east-1.amazonaws.com",
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "DailyCloudWatchLogsArchiverLogArchiveBucket88461686",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "s3:PutObject",
              "Condition": Object {
                "StringEquals": Object {
                  "s3:x-amz-acl": "bucket-owner-full-control",
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Service": "logs.us-east-1.amazonaws.com",
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "DailyCloudWatchLogsArchiverLogArchiveBucket88461686",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "DailyCloudWatchLogsArchiverLogArchiveFunction1589C8E4": Object {
      "DependsOn": Array [
        "DailyCloudWatchLogsArchiverLambdaExecutionRoleB287F490",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "HASH.zip",
        },
        "Description": "A function to archive logs s3 bucket from CloudWatch Logs.",
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "BUCKET_NAME": Object {
              "Ref": "DailyCloudWatchLogsArchiverLogArchiveBucket88461686",
            },
          },
        },
        "FunctionName": "daily-cw-log-archiver-a5ac343a-func",
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "DailyCloudWatchLogsArchiverLambdaExecutionRoleB287F490",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "DailyCloudWatchLogsArchiverSchedule0c256a4b0CD0D96F": Object {
      "Properties": Object {
        "Description": "example log archive 2nd rule.",
        "FlexibleTimeWindow": Object {
          "Mode": "OFF",
        },
        "GroupName": "log-archive-schedule-a5ac343a-group",
        "Name": "example-log-archive-2nd-rule",
        "ScheduleExpression": "cron(1 13 * * ? *)",
        "ScheduleExpressionTimezone": "UTC",
        "State": "ENABLED",
        "Target": Object {
          "Arn": Object {
            "Fn::GetAtt": Array [
              "DailyCloudWatchLogsArchiverLogArchiveFunction1589C8E4",
              "Arn",
            ],
          },
          "Input": "{"logGroupName":"example-log-2nd-group","destinationPrefix":"example-2nd-log"}",
          "RetryPolicy": Object {
            "MaximumEventAgeInSeconds": 60,
            "MaximumRetryAttempts": 0,
          },
          "RoleArn": Object {
            "Fn::GetAtt": Array [
              "DailyCloudWatchLogsArchiverSchedulerExecutionRoleB476F543",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::Scheduler::Schedule",
    },
    "DailyCloudWatchLogsArchiverSchedule78b9c1a9F3486471": Object {
      "Properties": Object {
        "Description": "example log archive 1st rule.",
        "FlexibleTimeWindow": Object {
          "Mode": "OFF",
        },
        "GroupName": "log-archive-schedule-a5ac343a-group",
        "Name": "example-log-archive-1st-rule",
        "ScheduleExpression": "cron(0 13 * * ? *)",
        "ScheduleExpressionTimezone": "UTC",
        "State": "ENABLED",
        "Target": Object {
          "Arn": Object {
            "Fn::GetAtt": Array [
              "DailyCloudWatchLogsArchiverLogArchiveFunction1589C8E4",
              "Arn",
            ],
          },
          "Input": "{"logGroupName":"example-log-1st-group","destinationPrefix":"example-1st-log"}",
          "RetryPolicy": Object {
            "MaximumEventAgeInSeconds": 60,
            "MaximumRetryAttempts": 0,
          },
          "RoleArn": Object {
            "Fn::GetAtt": Array [
              "DailyCloudWatchLogsArchiverSchedulerExecutionRoleB476F543",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::Scheduler::Schedule",
    },
    "DailyCloudWatchLogsArchiverScheduleGroupF93344C1": Object {
      "Properties": Object {
        "Name": "log-archive-schedule-a5ac343a-group",
      },
      "Type": "AWS::Scheduler::ScheduleGroup",
    },
    "DailyCloudWatchLogsArchiverSchedulerExecutionRoleB476F543": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "scheduler.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": "lambda:InvokeFunction",
                  "Effect": "Allow",
                  "Resource": Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "DailyCloudWatchLogsArchiverLogArchiveFunction1589C8E4",
                        "Arn",
                      ],
                    },
                    Object {
                      "Fn::Join": Array [
                        "",
                        Array [
                          Object {
                            "Fn::GetAtt": Array [
                              "DailyCloudWatchLogsArchiverLogArchiveFunction1589C8E4",
                              "Arn",
                            ],
                          },
                          ":*",
                        ],
                      ],
                    },
                  ],
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "lambda-invoke-policy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
